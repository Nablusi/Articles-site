{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getCommentsFetch = createAsyncThunk(\"getCommentsSlice/getCommentsFetch\", async ({\n  slug\n}) => {\n  const res = await fetch(`https://api.realworld.io/api/articles/${slug}/comments`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Token ${token}`\n    }\n  });\n  const data = await res.json();\n  return data;\n});\nconst getCommentsSlice = createSlice({\n  name: \"getCommentsSlice\",\n  initialState: {},\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCommentsFetch.pending, state => {\n      console.log(\"Fetching comments...\");\n    });\n    builder.addCase(getCommentsFetch.fulfilled, (state, action) => {\n      console.log(\"Fetched comments:\", action.payload);\n      return action.payload;\n    });\n    builder.addCase(getCommentsFetch.rejected, (state, action) => {\n      console.error(\"Failed to fetch comments:\", action.error);\n    });\n  }\n});\nexport default getCommentsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getCommentsFetch","slug","res","fetch","method","headers","token","data","json","getCommentsSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","console","log","fulfilled","action","payload","rejected","error","reducer"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/ReduxPages/ReduxSlices/getComments-slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getCommentsFetch = createAsyncThunk(\r\n  \"getCommentsSlice/getCommentsFetch\",\r\n  async ({slug}) => {\r\n    const res = await fetch(`https://api.realworld.io/api/articles/${slug}/comments`,{method:\"GET\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Token ${token}`\r\n      },\r\n\r\n}); \r\n    const data = await res.json(); \r\n    return data; \r\n  });\r\n\r\n\r\nconst getCommentsSlice = createSlice({\r\n  name: \"getCommentsSlice\",\r\n  initialState: {},\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getCommentsFetch.pending, (state) => {\r\n      console.log(\"Fetching comments...\");\r\n    });\r\n    builder.addCase(getCommentsFetch.fulfilled, (state, action) => {\r\n      console.log(\"Fetched comments:\", action.payload);\r\n      return action.payload;\r\n    });\r\n    builder.addCase(getCommentsFetch.rejected, (state, action) => {\r\n      console.error(\"Failed to fetch comments:\", action.error);\r\n    });\r\n  },\r\n});\r\n\r\nexport default getCommentsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,gBAAgB,GAAGD,gBAAgB,CAC9C,mCAAmC,EACnC,OAAO;EAACE;AAAI,CAAC,KAAK;EAChB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,yCAAwCF,IAAK,WAAU,EAAC;IAACG,MAAM,EAAC,KAAK;IAC9FC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,SAAQC,KAAM;IAClC;EAEN,CAAC,CAAC;EACE,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI;AACb,CAAC,CAAC;AAGJ,MAAME,gBAAgB,GAAGX,WAAW,CAAC;EACnCY,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,gBAAgB,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACnDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACf,gBAAgB,CAACoB,SAAS,EAAE,CAACH,KAAK,EAAEI,MAAM,KAAK;MAC7DH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,MAAM,CAACC,OAAO,CAAC;MAChD,OAAOD,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;IACFR,OAAO,CAACC,OAAO,CAACf,gBAAgB,CAACuB,QAAQ,EAAE,CAACN,KAAK,EAAEI,MAAM,KAAK;MAC5DH,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEH,MAAM,CAACG,KAAK,CAAC;IAC1D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAef,gBAAgB,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}