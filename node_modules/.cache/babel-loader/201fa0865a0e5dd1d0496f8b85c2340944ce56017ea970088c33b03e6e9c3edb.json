{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const updateFetch = createAsyncThunk('updateSlice/updateFetch', async ({\n  email,\n  bio,\n  image\n}) => {\n  const res = await fetch('https://api.realworld.io/api/user', {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user: {\n        email,\n        bio,\n        image\n      }\n    })\n  });\n  const data = await res.json();\n  console.log(data.user.token);\n  return data;\n});\nconst updateSlice = createSlice({\n  initialState: [],\n  name: 'updateSlice',\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(updateFetch.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport default updateSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","updateFetch","email","bio","image","res","fetch","method","headers","body","JSON","stringify","user","data","json","console","log","token","updateSlice","initialState","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/ReduxPages/ReduxSlices/updateUser-slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const updateFetch = createAsyncThunk('updateSlice/updateFetch', \r\nasync({email, bio, image})=>{\r\n    const res = await fetch('https://api.realworld.io/api/user', \r\n    {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            user: {\r\n            email,\r\n            bio,\r\n            image,\r\n             \r\n          },\r\n        }),\r\n      })\r\n    const data = await res.json();\r\n    console.log(data.user.token) \r\n    return data; \r\n}\r\n)\r\n\r\nconst updateSlice = createSlice({\r\n    initialState:[], \r\n    name:'updateSlice', \r\n    reducers:{}, \r\n    extraReducers:(builder)=>{\r\n        builder.addCase(updateFetch.fulfilled, (state, action)=>{\r\n            return action.payload; \r\n        })\r\n    }\r\n})\r\n\r\nexport default updateSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,WAAW,GAAGD,gBAAgB,CAAC,yBAAyB,EACrE,OAAM;EAACE,KAAK;EAAEC,GAAG;EAAEC;AAAK,CAAC,KAAG;EACxB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAC3D;IACIC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,IAAI,EAAE;QACNV,KAAK;QACLC,GAAG;QACHC;MAEF;IACF,CAAC;EACH,CAAC,CAAC;EACJ,MAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACD,IAAI,CAACK,KAAK,CAAC;EAC5B,OAAOJ,IAAI;AACf,CACA,CAAC;AAED,MAAMK,WAAW,GAAGnB,WAAW,CAAC;EAC5BoB,YAAY,EAAC,EAAE;EACfC,IAAI,EAAC,aAAa;EAClBC,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAEC,OAAO,IAAG;IACrBA,OAAO,CAACC,OAAO,CAACvB,WAAW,CAACwB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MACpD,OAAOA,MAAM,CAACC,OAAO;IACzB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeV,WAAW,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}