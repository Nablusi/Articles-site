{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects-coding\\\\projects\\\\react-js\\\\learn-react\\\\ramizaid\\\\src\\\\Pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Container, TextField, Typography } from \"@mui/material\";\nimport { signUpFetch } from \"../ReduxPages/ReduxSlices/signup-slice\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  // const [username, setUsername] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\").min(4, \"Username must be at least 4 characters\").max(20, \"Username must be at most 20 characters\").matches(/^[a-zA-Z][a-zA-Z0-9-_]*$/, \"username can contain alphanumeric characters, hyphens, and underscores\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\").min(8, \"Password must be at least 8 characters\").max(20, \"Password must be at most 20 characters\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/, \"Password must contain at least one uppercase letter, one lowercase letter\")\n  });\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  async function clickHandler(values) {\n    e.preventDefault();\n    await dispatch(signUpFetch({}));\n    // navigate(\"/\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Container\n    //   component={\"div\"}\n    //   sx={{\n    //     pt: \"50px\",\n    //     pb: \"50px\",\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     alignItems: \"center\",\n    //     flexDirection: \"column\",\n    //   }}\n    // >\n    //   <Typography component={\"h2\"} sx={{ color: \"#5CB85C\", fontSize: \"30px\" }}>\n    //     Sign Up\n    //   </Typography>\n    //   <Link to=\"/signin\" className=\"haveAnAccount\" style={{ color: \"#5CB85C\" }}>\n    //     {\" \"}\n    //     Have An Account{\" \"}\n    //   </Link>\n    //   <Box\n    //     component={\"form\"}\n    //     onSubmit={clickHandler}\n    //     sx={{\n    //       width: \"70%\",\n    //       display: \"flex\",\n    //       justifyContent: \"center\",\n    //       alignItems: \"center\",\n    //       flexDirection: \"column\",\n    //     }}\n    //   >\n    //     <TextField\n    //       id=\"username\"\n    //       label=\"Username\"\n    //       variant=\"outlined\"\n    //       sx={{ mt: \"30px\", mb: \"30px\", width: \"70%\" }}\n    //       value={username}\n    //       onChange={(e) => setUsername(e.target.value)}\n    //     />\n    //     <TextField\n    //       id=\"email\"\n    //       label=\"Email\"\n    //       variant=\"outlined\"\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\n    //       value={email}\n    //       onChange={(e) => setEmail(e.target.value)}\n    //     />\n    //     <TextField\n    //       id=\"password\"\n    //       label=\"Password\"\n    //       variant=\"outlined\"\n    //       type=\"password\"\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\n    //       value={password}\n    //       onChange={(e) => setPassword(e.target.value)}\n    //     />\n    //     <Button\n    //       type=\"submit\"\n    //       className=\"btn\"\n    //       sx={{\n    //         color: \"#5CB85C\",\n    //         borderColor:\"#5CB85C\",\n    //         borderWidth:\"1px\",\n    //         borderStyle:\"solid\",\n    //         \"&:hover\": { color: \"white\", backgroundColor: \"#5CB85C\" },\n    //       }}\n    //     >\n    //       Register\n    //     </Button>\n    //   </Box>\n    // </Container>\n    _jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: clickHandler,\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          label: \"Username\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.username,\n          error: touched.username && !!errors.username,\n          helperText: touched.username && errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          label: \"Email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email,\n          error: touched.email && !!errors.email,\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          label: \"Password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password,\n          error: touched.password && !!errors.password,\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(SignUp, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useDispatch","Link","useNavigate","Box","Button","Container","TextField","Typography","signUpFetch","Formik","Field","Form","Yup","jsxDEV","_jsxDEV","SignUp","_s","navigate","dispatch","validationSchema","object","shape","username","string","required","min","max","matches","email","password","initialValues","clickHandler","values","e","preventDefault","onSubmit","children","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","as","type","name","id","label","onChange","onBlur","value","error","helperText","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/Pages/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Container, TextField, Typography } from \"@mui/material\";\r\nimport { signUpFetch } from \"../ReduxPages/ReduxSlices/signup-slice\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function SignUp() {\r\n  // const [username, setUsername] = useState(\"\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .required(\"Username is required\")\r\n      .min(4, \"Username must be at least 4 characters\")\r\n      .max(20, \"Username must be at most 20 characters\")\r\n      .matches(\r\n        /^[a-zA-Z][a-zA-Z0-9-_]*$/,\r\n        \"username can contain alphanumeric characters, hyphens, and underscores\"\r\n      ),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(8, \"Password must be at least 8 characters\")\r\n      .max(20, \"Password must be at most 20 characters\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/,\r\n        \"Password must contain at least one uppercase letter, one lowercase letter\"\r\n      ),\r\n  });\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  async function clickHandler(values) {\r\n    e.preventDefault();\r\n    await dispatch(signUpFetch({  }));\r\n    // navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    // <Container\r\n    //   component={\"div\"}\r\n    //   sx={{\r\n    //     pt: \"50px\",\r\n    //     pb: \"50px\",\r\n    //     display: \"flex\",\r\n    //     justifyContent: \"center\",\r\n    //     alignItems: \"center\",\r\n    //     flexDirection: \"column\",\r\n    //   }}\r\n    // >\r\n    //   <Typography component={\"h2\"} sx={{ color: \"#5CB85C\", fontSize: \"30px\" }}>\r\n    //     Sign Up\r\n    //   </Typography>\r\n    //   <Link to=\"/signin\" className=\"haveAnAccount\" style={{ color: \"#5CB85C\" }}>\r\n    //     {\" \"}\r\n    //     Have An Account{\" \"}\r\n    //   </Link>\r\n    //   <Box\r\n    //     component={\"form\"}\r\n    //     onSubmit={clickHandler}\r\n    //     sx={{\r\n    //       width: \"70%\",\r\n    //       display: \"flex\",\r\n    //       justifyContent: \"center\",\r\n    //       alignItems: \"center\",\r\n    //       flexDirection: \"column\",\r\n    //     }}\r\n    //   >\r\n    //     <TextField\r\n    //       id=\"username\"\r\n    //       label=\"Username\"\r\n    //       variant=\"outlined\"\r\n    //       sx={{ mt: \"30px\", mb: \"30px\", width: \"70%\" }}\r\n    //       value={username}\r\n    //       onChange={(e) => setUsername(e.target.value)}\r\n    //     />\r\n    //     <TextField\r\n    //       id=\"email\"\r\n    //       label=\"Email\"\r\n    //       variant=\"outlined\"\r\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\r\n    //       value={email}\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n    //     <TextField\r\n    //       id=\"password\"\r\n    //       label=\"Password\"\r\n    //       variant=\"outlined\"\r\n    //       type=\"password\"\r\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <Button\r\n    //       type=\"submit\"\r\n    //       className=\"btn\"\r\n    //       sx={{\r\n    //         color: \"#5CB85C\",\r\n    //         borderColor:\"#5CB85C\",\r\n    //         borderWidth:\"1px\",\r\n    //         borderStyle:\"solid\",\r\n    //         \"&:hover\": { color: \"white\", backgroundColor: \"#5CB85C\" },\r\n    //       }}\r\n    //     >\r\n    //       Register\r\n    //     </Button>\r\n    //   </Box>\r\n    // </Container>\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={clickHandler}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Field\r\n            as={TextField}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.username}\r\n            error={touched.username && !!errors.username}\r\n            helperText={touched.username && errors.username}\r\n          />\r\n          <Field\r\n            as={TextField}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.email}\r\n            error={touched.email && !!errors.email}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n          <Field\r\n            as={TextField}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.password}\r\n            error={touched.password && !!errors.password}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n          <Button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}