{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects-coding\\\\projects\\\\react-js\\\\learn-react\\\\ramizaid\\\\src\\\\components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { AppBar, Container, Toolbar, Typography, IconButton, Box, useTheme, Button, Avatar } from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport { conditions } from \"./ReduxServices/Slices/conditions-slice\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\n// import { useDispatch, useSelector } from \"react-redux\";\nimport { userFetch } from \"./ReduxServices/Slices/user-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppBarR(props) {\n  _s();\n  const pages = [\"Home\", \"Sign In\", \"sign Up\"];\n  const pagesHref = [\"/\", \"/signin\", \"/signup\"];\n  const location = useLocation();\n  const theme = useTheme();\n  //   const dispatch = useDispatch();\n  const logInPages = [\"Home\", \"New Post\", \"Settings\"];\n  //   const conditionsPage = useSelector((state) => state.condition);\n  //   const user = JSON.parse(localStorage.getItem(\"user-info\"));\n  //   const image = user ? `http://localhost:3000/${user.image}` : null;\n  const logInPagesHref = [\"/\", \"/newPost\", `/settings`];\n  const navigate = useNavigate();\n  //   const userRedux = useSelector((state) => state.user);\n\n  //   useEffect(() => {\n  //     const user = JSON.parse(localStorage.getItem(\"user-info\"));\n  //     if (user) {\n  //       dispatch(conditions(true));\n  //     }\n  //   }, []);\n\n  //   useEffect(() => {\n  //     dispatch(userFetch());\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    sx: {\n      backgroundColor: \"transparent\",\n      boxShadow: \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"\",\n          sx: {\n            display: {\n              xs: \"flex\",\n              md: \"none\"\n            }\n          },\n          onClick: () => {\n            props.openToggle();\n            localStorage.setItem(\"current value\", props.mode);\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              color: \"#5CB85C\",\n              textDecoration: \"none\",\n              fontSize: \"25px\"\n            },\n            children: \"Conduit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: {\n              xs: \"none\",\n              md: \"flex\"\n            },\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"row\"\n          },\n          children: pages.map((page, index) => /*#__PURE__*/_jsxDEV(Link, {\n            to: pagesHref[index],\n            style: {\n              textDecoration: \"none\",\n              color: theme.palette.white.main,\n              backgroundColor: location.pathname === pagesHref[index] ? theme.palette.mainColor.main : \"\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"btn\",\n              component: \"h2\",\n              variant: \"h6\",\n              sx: {\n                fontSize: \"16px\",\n                p: \"10px\"\n              },\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)\n          }, page, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AppBarR, \"oe38bhR4Rue2N+MetRucgpnDnkQ=\", false, function () {\n  return [useLocation, useTheme, useNavigate];\n});\n_c = AppBarR;\nvar _c;\n$RefreshReg$(_c, \"AppBarR\");","map":{"version":3,"names":["React","useEffect","AppBar","Container","Toolbar","Typography","IconButton","Box","useTheme","Button","Avatar","MenuIcon","Link","useLocation","useNavigate","useParams","Brightness7Icon","Brightness4Icon","conditions","LogoutIcon","userFetch","jsxDEV","_jsxDEV","AppBarR","props","_s","pages","pagesHref","location","theme","logInPages","logInPagesHref","navigate","position","sx","backgroundColor","boxShadow","children","disableGutters","display","xs","md","onClick","openToggle","localStorage","setItem","mode","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","to","style","color","textDecoration","fontSize","justifyContent","alignItems","flexDirection","map","page","index","palette","white","main","pathname","mainColor","className","component","variant","p","_c","$RefreshReg$"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/components/Header/Header.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Container,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Box,\r\n  useTheme,\r\n  Button,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport { conditions } from \"./ReduxServices/Slices/conditions-slice\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\nimport { userFetch } from \"./ReduxServices/Slices/user-slice\";\r\n\r\nexport default function AppBarR(props) {\r\n  const pages = [\"Home\", \"Sign In\", \"sign Up\"];\r\n  const pagesHref = [\"/\", \"/signin\", \"/signup\"];\r\n  const location = useLocation();\r\n  const theme = useTheme();\r\n//   const dispatch = useDispatch();\r\n  const logInPages = [\"Home\", \"New Post\", \"Settings\"];\r\n//   const conditionsPage = useSelector((state) => state.condition);\r\n//   const user = JSON.parse(localStorage.getItem(\"user-info\"));\r\n//   const image = user ? `http://localhost:3000/${user.image}` : null;\r\n  const logInPagesHref = [\"/\", \"/newPost\", `/settings`  ];\r\n  const navigate = useNavigate();\r\n//   const userRedux = useSelector((state) => state.user);\r\n\r\n//   useEffect(() => {\r\n//     const user = JSON.parse(localStorage.getItem(\"user-info\"));\r\n//     if (user) {\r\n//       dispatch(conditions(true));\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(userFetch());\r\n//   }, []);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      sx={{ backgroundColor: \"transparent\", boxShadow: \"none\" }}\r\n    >\r\n      <Container>\r\n        <Toolbar disableGutters>\r\n          <IconButton\r\n            aria-label=\"\"\r\n            sx={{ display: { xs: \"flex\", md: \"none\" } }}\r\n            onClick={() => {\r\n              props.openToggle();\r\n              localStorage.setItem(\"current value\", props.mode);\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                color: \"#5CB85C\",\r\n                textDecoration: \"none\",\r\n                fontSize: \"25px\",\r\n              }}\r\n            >\r\n              Conduit\r\n            </Link>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n\r\n              {pages.map((page, index) => (\r\n                  <Link\r\n                    to={pagesHref[index]}\r\n                    style={{\r\n                      textDecoration: \"none\",\r\n                      color: theme.palette.white.main,\r\n                      backgroundColor:\r\n                        location.pathname === pagesHref[index]\r\n                          ? theme.palette.mainColor.main\r\n                          : \"\",\r\n                    }}\r\n                    key={page}\r\n                  >\r\n                    <Typography\r\n                      className=\"btn\"\r\n                      component={\"h2\"}\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontSize: \"16px\",\r\n                        p: \"10px\",\r\n\r\n                      }}\r\n                    >\r\n                      {page}\r\n                    </Typography>\r\n                  </Link>\r\n                ))}\r\n\r\n            {/* {conditionsPage ? (\r\n              <>\r\n                \r\n                  <Link to={`/profile`} key={user.username}>\r\n                    <Avatar src={image} alt=\"user picture\" />\r\n                  </Link>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(conditions(false));\r\n                    console.log(\"condition set to false\");\r\n                    localStorage.removeItem(\"user-info\");\r\n                    localStorage.removeItem(\"condition\");\r\n                    navigate(\"/\");\r\n                  }}\r\n                >\r\n                  <LogoutIcon />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}