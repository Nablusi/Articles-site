{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const loginFetch = createAsyncThunk(\"loginSlice/loginFetch\", async ({\n  values\n}) => {\n  const {\n    email,\n    password\n  } = values;\n  const res = await fetch(\"api.realworld.io/api/users/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user: {\n        email,\n        password\n      }\n    })\n  });\n  const data = await res.json();\n  // console.log(data.user.token);\n  return data;\n});\nconst loginSlice = createSlice({\n  initialState: [],\n  name: \"loginSlice\",\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginFetch.fulfilled, (state, action) => {\n      state = action.payload;\n    });\n  }\n});\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginFetch","values","email","password","res","fetch","method","headers","body","JSON","stringify","user","data","json","loginSlice","initialState","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/ReduxPages/ReduxSlices/login-slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nexport const loginFetch = createAsyncThunk(\r\n  \"loginSlice/loginFetch\",\r\n  async ({ values }) => {\r\n    const { email, password } = values;\r\n    const res = await fetch(\"api.realworld.io/api/users/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: {\r\n          email,\r\n          password,\r\n        },\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    // console.log(data.user.token);\r\n    return data;\r\n  }\r\n);\r\nconst loginSlice = createSlice({\r\n  initialState: [],\r\n  name: \"loginSlice\",\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(loginFetch.fulfilled, (state, action)=>{\r\n        state = action.payload; \r\n    });\r\n  },\r\n});\r\nexport default loginSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CACxC,uBAAuB,EACvB,OAAO;EAAEE;AAAO,CAAC,KAAK;EACpB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGF,MAAM;EAClC,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,IAAI,EAAE;QACJT,KAAK;QACLC;MACF;IACF,CAAC;EACH,CAAC,CAAC;EACF,MAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EAC7B;EACA,OAAOD,IAAI;AACb,CACF,CAAC;AACD,MAAME,UAAU,GAAGhB,WAAW,CAAC;EAC7BiB,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACpB,UAAU,CAACqB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MACnDD,KAAK,GAAGC,MAAM,CAACC,OAAO;IAC1B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AACF,eAAeV,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}