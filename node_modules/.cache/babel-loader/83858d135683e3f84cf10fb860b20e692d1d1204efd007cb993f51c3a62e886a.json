{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects-coding\\\\projects\\\\react-js\\\\learn-react\\\\ramizaid\\\\src\\\\Pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Container, TextField, Typography } from \"@mui/material\";\nimport { signUpFetch } from \"../ReduxPages/ReduxSlices/signup-slice\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required').max(20, 'Username must be at most 20 characters'),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  async function clickHandler(e) {\n    e.preventDefault();\n    await dispatch(signUpFetch({\n      username,\n      email,\n      password\n    }));\n    // navigate(\"/\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Container\n    //   component={\"div\"}\n    //   sx={{\n    //     pt: \"50px\",\n    //     pb: \"50px\",\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     alignItems: \"center\",\n    //     flexDirection: \"column\",\n    //   }}\n    // >\n    //   <Typography component={\"h2\"} sx={{ color: \"#5CB85C\", fontSize: \"30px\" }}>\n    //     Sign Up\n    //   </Typography>\n    //   <Link to=\"/signin\" className=\"haveAnAccount\" style={{ color: \"#5CB85C\" }}>\n    //     {\" \"}\n    //     Have An Account{\" \"}\n    //   </Link>\n    //   <Box\n    //     component={\"form\"}\n    //     onSubmit={clickHandler}\n    //     sx={{\n    //       width: \"70%\",\n    //       display: \"flex\",\n    //       justifyContent: \"center\",\n    //       alignItems: \"center\",\n    //       flexDirection: \"column\",\n    //     }}\n    //   >\n    //     <TextField\n    //       id=\"username\"\n    //       label=\"Username\"\n    //       variant=\"outlined\"\n    //       sx={{ mt: \"30px\", mb: \"30px\", width: \"70%\" }}\n    //       value={username}\n    //       onChange={(e) => setUsername(e.target.value)}\n    //     />\n    //     <TextField\n    //       id=\"email\"\n    //       label=\"Email\"\n    //       variant=\"outlined\"\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\n    //       value={email}\n    //       onChange={(e) => setEmail(e.target.value)}\n    //     />\n    //     <TextField\n    //       id=\"password\"\n    //       label=\"Password\"\n    //       variant=\"outlined\"\n    //       type=\"password\"\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\n    //       value={password}\n    //       onChange={(e) => setPassword(e.target.value)}\n    //     />\n    //     <Button\n    //       type=\"submit\"\n    //       className=\"btn\"\n    //       sx={{\n    //         color: \"#5CB85C\",\n    //         borderColor:\"#5CB85C\",\n    //         borderWidth:\"1px\",\n    //         borderStyle:\"solid\",\n    //         \"&:hover\": { color: \"white\", backgroundColor: \"#5CB85C\" },\n    //       }}\n    //     >\n    //       Register\n    //     </Button>\n    //   </Box>\n    // </Container>\n    _jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          label: \"Username\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.username,\n          error: touched.username && !!errors.username,\n          helperText: touched.username && errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          label: \"Email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email,\n          error: touched.email && !!errors.email,\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          label: \"Password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password,\n          error: touched.password && !!errors.password,\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(SignUp, \"8cWOjJn636JmC+uayoSVLmE+CYk=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useDispatch","Link","useNavigate","Box","Button","Container","TextField","Typography","signUpFetch","Formik","Field","Form","Yup","jsxDEV","_jsxDEV","SignUp","_s","username","setUsername","email","setEmail","password","setPassword","navigate","dispatch","validationSchema","object","shape","string","required","max","initialValues","clickHandler","e","preventDefault","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","children","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","as","type","name","id","label","onChange","onBlur","value","error","helperText","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/Pages/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Container, TextField, Typography } from \"@mui/material\";\r\nimport { signUpFetch } from \"../ReduxPages/ReduxSlices/signup-slice\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function SignUp() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('Username is required').max(20, 'Username must be at most 20 characters'),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  async function clickHandler(e) {\r\n    e.preventDefault();\r\n    await dispatch(signUpFetch({ username, email, password }));\r\n    // navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    // <Container\r\n    //   component={\"div\"}\r\n    //   sx={{\r\n    //     pt: \"50px\",\r\n    //     pb: \"50px\",\r\n    //     display: \"flex\",\r\n    //     justifyContent: \"center\",\r\n    //     alignItems: \"center\",\r\n    //     flexDirection: \"column\",\r\n    //   }}\r\n    // >\r\n    //   <Typography component={\"h2\"} sx={{ color: \"#5CB85C\", fontSize: \"30px\" }}>\r\n    //     Sign Up\r\n    //   </Typography>\r\n    //   <Link to=\"/signin\" className=\"haveAnAccount\" style={{ color: \"#5CB85C\" }}>\r\n    //     {\" \"}\r\n    //     Have An Account{\" \"}\r\n    //   </Link>\r\n    //   <Box\r\n    //     component={\"form\"}\r\n    //     onSubmit={clickHandler}\r\n    //     sx={{\r\n    //       width: \"70%\",\r\n    //       display: \"flex\",\r\n    //       justifyContent: \"center\",\r\n    //       alignItems: \"center\",\r\n    //       flexDirection: \"column\",\r\n    //     }}\r\n    //   >\r\n    //     <TextField\r\n    //       id=\"username\"\r\n    //       label=\"Username\"\r\n    //       variant=\"outlined\"\r\n    //       sx={{ mt: \"30px\", mb: \"30px\", width: \"70%\" }}\r\n    //       value={username}\r\n    //       onChange={(e) => setUsername(e.target.value)}\r\n    //     />\r\n    //     <TextField\r\n    //       id=\"email\"\r\n    //       label=\"Email\"\r\n    //       variant=\"outlined\"\r\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\r\n    //       value={email}\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n    //     <TextField\r\n    //       id=\"password\"\r\n    //       label=\"Password\"\r\n    //       variant=\"outlined\"\r\n    //       type=\"password\"\r\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <Button\r\n    //       type=\"submit\"\r\n    //       className=\"btn\"\r\n    //       sx={{\r\n    //         color: \"#5CB85C\",\r\n    //         borderColor:\"#5CB85C\",\r\n    //         borderWidth:\"1px\",\r\n    //         borderStyle:\"solid\",\r\n    //         \"&:hover\": { color: \"white\", backgroundColor: \"#5CB85C\" },\r\n    //       }}\r\n    //     >\r\n    //       Register\r\n    //     </Button>\r\n    //   </Box>\r\n    // </Container>\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Field\r\n            as={TextField}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.username}\r\n            error={touched.username && !!errors.username}\r\n            helperText={touched.username && errors.username}\r\n          />\r\n          <Field\r\n            as={TextField}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.email}\r\n            error={touched.email && !!errors.email}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n          <Field\r\n            as={TextField}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.password}\r\n            error={touched.password && !!errors.password}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n\r\n          <Button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}