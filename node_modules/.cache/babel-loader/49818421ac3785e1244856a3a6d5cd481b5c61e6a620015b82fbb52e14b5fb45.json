{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects-coding\\\\projects\\\\react-js\\\\learn-react\\\\ramizaid\\\\src\\\\Pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Container, TextField, Typography } from \"@mui/material\";\nimport { signUpFetch } from \"../ReduxPages/ReduxSlices/signup-slice\";\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  async function clickHandler(e) {\n    e.preventDefault();\n    await dispatch(signUpFetch({\n      username,\n      email,\n      password\n    }));\n    // navigate(\"/\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Container\n    //   component={\"div\"}\n    //   sx={{\n    //     pt: \"50px\",\n    //     pb: \"50px\",\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     alignItems: \"center\",\n    //     flexDirection: \"column\",\n    //   }}\n    // >\n    //   <Typography component={\"h2\"} sx={{ color: \"#5CB85C\", fontSize: \"30px\" }}>\n    //     Sign Up\n    //   </Typography>\n    //   <Link to=\"/signin\" className=\"haveAnAccount\" style={{ color: \"#5CB85C\" }}>\n    //     {\" \"}\n    //     Have An Account{\" \"}\n    //   </Link>\n    //   <Box\n    //     component={\"form\"}\n    //     onSubmit={clickHandler}\n    //     sx={{\n    //       width: \"70%\",\n    //       display: \"flex\",\n    //       justifyContent: \"center\",\n    //       alignItems: \"center\",\n    //       flexDirection: \"column\",\n    //     }}\n    //   >\n    //     <TextField\n    //       id=\"username\"\n    //       label=\"Username\"\n    //       variant=\"outlined\"\n    //       sx={{ mt: \"30px\", mb: \"30px\", width: \"70%\" }}\n    //       value={username}\n    //       onChange={(e) => setUsername(e.target.value)}\n    //     />\n    //     <TextField\n    //       id=\"email\"\n    //       label=\"Email\"\n    //       variant=\"outlined\"\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\n    //       value={email}\n    //       onChange={(e) => setEmail(e.target.value)}\n    //     />\n    //     <TextField\n    //       id=\"password\"\n    //       label=\"Password\"\n    //       variant=\"outlined\"\n    //       type=\"password\"\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\n    //       value={password}\n    //       onChange={(e) => setPassword(e.target.value)}\n    //     />\n    //     <Button\n    //       type=\"submit\"\n    //       className=\"btn\"\n    //       sx={{\n    //         color: \"#5CB85C\",\n    //         borderColor:\"#5CB85C\",\n    //         borderWidth:\"1px\", \n    //         borderStyle:\"solid\",\n    //         \"&:hover\": { color: \"white\", backgroundColor: \"#5CB85C\" },\n    //       }}\n    //     >\n    //       Register\n    //     </Button>\n    //   </Box>\n    // </Container>\n    _jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"username\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(SignUp, \"8cWOjJn636JmC+uayoSVLmE+CYk=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useDispatch","Link","useNavigate","Box","Button","Container","TextField","Typography","signUpFetch","Formik","jsxDEV","_jsxDEV","SignUp","_s","username","setUsername","email","setEmail","password","setPassword","navigate","dispatch","clickHandler","e","preventDefault","initialValues","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","children","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","name","id","onChange","onBlur","value","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/Pages/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Container, TextField, Typography } from \"@mui/material\";\r\nimport { signUpFetch } from \"../ReduxPages/ReduxSlices/signup-slice\";\r\nimport { Formik } from 'formik';\r\n\r\nexport default function SignUp() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  async function clickHandler(e) {\r\n    e.preventDefault();\r\n    await dispatch(signUpFetch({ username, email, password }));\r\n    // navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    // <Container\r\n    //   component={\"div\"}\r\n    //   sx={{\r\n    //     pt: \"50px\",\r\n    //     pb: \"50px\",\r\n    //     display: \"flex\",\r\n    //     justifyContent: \"center\",\r\n    //     alignItems: \"center\",\r\n    //     flexDirection: \"column\",\r\n    //   }}\r\n    // >\r\n    //   <Typography component={\"h2\"} sx={{ color: \"#5CB85C\", fontSize: \"30px\" }}>\r\n    //     Sign Up\r\n    //   </Typography>\r\n    //   <Link to=\"/signin\" className=\"haveAnAccount\" style={{ color: \"#5CB85C\" }}>\r\n    //     {\" \"}\r\n    //     Have An Account{\" \"}\r\n    //   </Link>\r\n    //   <Box\r\n    //     component={\"form\"}\r\n    //     onSubmit={clickHandler}\r\n    //     sx={{\r\n    //       width: \"70%\",\r\n    //       display: \"flex\",\r\n    //       justifyContent: \"center\",\r\n    //       alignItems: \"center\",\r\n    //       flexDirection: \"column\",\r\n    //     }}\r\n    //   >\r\n    //     <TextField\r\n    //       id=\"username\"\r\n    //       label=\"Username\"\r\n    //       variant=\"outlined\"\r\n    //       sx={{ mt: \"30px\", mb: \"30px\", width: \"70%\" }}\r\n    //       value={username}\r\n    //       onChange={(e) => setUsername(e.target.value)}\r\n    //     />\r\n    //     <TextField\r\n    //       id=\"email\"\r\n    //       label=\"Email\"\r\n    //       variant=\"outlined\"\r\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\r\n    //       value={email}\r\n    //       onChange={(e) => setEmail(e.target.value)}\r\n    //     />\r\n    //     <TextField\r\n    //       id=\"password\"\r\n    //       label=\"Password\"\r\n    //       variant=\"outlined\"\r\n    //       type=\"password\"\r\n    //       sx={{ mb: \"30px\", width: \"70%\" }}\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //     />\r\n    //     <Button\r\n    //       type=\"submit\"\r\n    //       className=\"btn\"\r\n    //       sx={{\r\n    //         color: \"#5CB85C\",\r\n    //         borderColor:\"#5CB85C\",\r\n    //         borderWidth:\"1px\", \r\n    //         borderStyle:\"solid\",\r\n    //         \"&:hover\": { color: \"white\", backgroundColor: \"#5CB85C\" },\r\n    //       }}\r\n    //     >\r\n    //       Register\r\n    //     </Button>\r\n    //   </Box>\r\n    // </Container>\r\n    <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n       }}\r\n     >\r\n       {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <input\r\n             type=\"text\"\r\n             name=\"username\"\r\n             id=\"username\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.username}\r\n           />\r\n           <input\r\n             type=\"email\"\r\n             name=\"email\"\r\n             id=\"email\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.email}\r\n           />\r\n           <input\r\n             type=\"password\"\r\n             name=\"password\"\r\n             id=\"username\"\r\n             onChange={handleChange}\r\n             onBlur={handleBlur}\r\n             value={values.username}\r\n           />\r\n\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </form>\r\n       )}\r\n     </Formik>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}