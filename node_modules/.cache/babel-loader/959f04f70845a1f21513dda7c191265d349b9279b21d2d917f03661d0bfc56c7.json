{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects-coding\\\\projects\\\\react-js\\\\learn-react\\\\ramizaid\\\\src\\\\components\\\\Header\\\\SideBar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport { Drawer, ListItem, ListItemButton, ListItemIcon, ListItemText, List, Divider, IconButton, useTheme } from \"@mui/material\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport HowToRegIcon from \"@mui/icons-material/HowToReg\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { condition } from \"../../ReduxPages/ReduxSlices/condition-slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n//   import SettingsIcon from \"@mui/icons-material/Settings\";\n//   import ArticleIcon from \"@mui/icons-material/Article\";\n//   import LogoutIcon from \"@mui/icons-material/Logout\";\n//   import {  useNavigate, } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SideBar(props) {\n  _s();\n  const theme = useTheme();\n  const location = useLocation();\n  const pages = [\"Home\", \"Sign In\", \"sign Up\"];\n  const logInPages = [\"Home\", \"New Post\", \"Settings\"];\n  const pagesHref = [\"/\", \"/signin\", \"/signup\"];\n  const logInPagesHref = [\"/\", \"/newPost\", `/settings`];\n  const arrayIcons = [/*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this), /*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 39\n  }, this), /*#__PURE__*/_jsxDEV(HowToRegIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 54\n  }, this)];\n  // const conditionsPage = useSelector((state) => state.condition);\n  // const arrayIconsLogin = [<HomeIcon />, <ArticleIcon />, <SettingsIcon />];\n  // const dispatch = useDispatch();\n  // const user = JSON.parse(localStorage.getItem(\"user-info\"));\n\n  // useEffect(() => {\n  //   const user = JSON.parse(localStorage.getItem(\"user-info\"));\n  //   if (user) {\n  //     dispatch(conditions(true));\n  //   }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"temporary\",\n    open: props.open,\n    onClose: props.openToggle,\n    sx: {\n      width: \"240px\",\n      display: {\n        xs: \"flex\",\n        md: \"none\"\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: \"240px\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            localStorage.setItem(\"currentMode\", theme.palette.mode === \"light\" ? \"dark\" : \"light\");\n            props.darkMode();\n          },\n          children: props.mode === \"light\" ? /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Brightness7Icon, {\n            sx: {\n              color: \"orange\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), pages.map((page, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: pagesHref[index],\n        style: {\n          textDecoration: \"none\",\n          color: theme.palette.mainColor.text\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          sx: {\n            backgroundColor: location.pathname === pagesHref[index] ? theme.palette.mainColor.background : \"\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: arrayIcons[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_s(SideBar, \"MktkgluFNueXdnZzPwsccmDqY1o=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","Brightness7Icon","Brightness4Icon","Drawer","ListItem","ListItemButton","ListItemIcon","ListItemText","List","Divider","IconButton","useTheme","Link","useLocation","HomeIcon","HowToRegIcon","LoginIcon","condition","useSelector","useDispatch","jsxDEV","_jsxDEV","SideBar","props","_s","theme","location","pages","logInPages","pagesHref","logInPagesHref","arrayIcons","fileName","_jsxFileName","lineNumber","columnNumber","variant","open","onClose","openToggle","sx","width","display","xs","md","children","flexDirection","justifyContent","className","style","onClick","localStorage","setItem","palette","mode","darkMode","color","map","page","index","to","textDecoration","mainColor","text","disablePadding","backgroundColor","pathname","background","primary","_c","$RefreshReg$"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/components/Header/SideBar.js"],"sourcesContent":["import React from \"react\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport {\r\n    Drawer,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Divider,\r\n    IconButton,\r\n    useTheme,\r\n  } from \"@mui/material\";\r\n  import { Link, useLocation } from \"react-router-dom\";\r\n  import HomeIcon from \"@mui/icons-material/Home\";\r\n  import HowToRegIcon from \"@mui/icons-material/HowToReg\";\r\n  import LoginIcon from \"@mui/icons-material/Login\";\r\n  import { condition } from \"../../ReduxPages/ReduxSlices/condition-slice\";\r\n  import { useSelector, useDispatch } from \"react-redux\";\r\n//   import SettingsIcon from \"@mui/icons-material/Settings\";\r\n//   import ArticleIcon from \"@mui/icons-material/Article\";\r\n//   import LogoutIcon from \"@mui/icons-material/Logout\";\r\n//   import {  useNavigate, } from \"react-router-dom\";\r\n\r\nexport default function SideBar(props){\r\n    const theme = useTheme();\r\n    const location = useLocation();\r\n    const pages = [\"Home\", \"Sign In\", \"sign Up\"];\r\n    const logInPages = [\"Home\", \"New Post\", \"Settings\"];\r\n    const pagesHref = [\"/\", \"/signin\", \"/signup\"];\r\n    const logInPagesHref = [\"/\", \"/newPost\", `/settings`];\r\n    const arrayIcons = [<HomeIcon />, <LoginIcon />, <HowToRegIcon />];\r\n    // const conditionsPage = useSelector((state) => state.condition);\r\n    // const arrayIconsLogin = [<HomeIcon />, <ArticleIcon />, <SettingsIcon />];\r\n    // const dispatch = useDispatch();\r\n    // const user = JSON.parse(localStorage.getItem(\"user-info\"));\r\n  \r\n    // useEffect(() => {\r\n    //   const user = JSON.parse(localStorage.getItem(\"user-info\"));\r\n    //   if (user) {\r\n    //     dispatch(conditions(true));\r\n    //   }\r\n    // }, []);\r\n\r\n    return(\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        open={props.open}\r\n        onClose={props.openToggle}\r\n        sx={{ width: \"240px\", display: { xs: \"flex\", md: \"none\" } }}\r\n      >\r\n        <List sx={{ width: \"240px\", flexDirection: \"column\", justifyContent:\"center\" }}>\r\n          <div className=\"text-center\" style={{width:'100%'}}>\r\n          <IconButton \r\n            onClick={() => {\r\n              localStorage.setItem(\r\n                \"currentMode\",\r\n                theme.palette.mode === \"light\" ? \"dark\" : \"light\"\r\n              );\r\n              props.darkMode();\r\n            }}\r\n          >\r\n            {props.mode === \"light\" ? (\r\n              <Brightness4Icon />\r\n            ) : (\r\n              <Brightness7Icon sx={{ color: \"orange\" }} />\r\n            )}\r\n          </IconButton>\r\n          </div>\r\n          <Divider />\r\n          {\r\n            pages.map((page, index) => (\r\n              <Link\r\n                to={pagesHref[index]}\r\n                style={{ textDecoration: \"none\" , color: theme.palette.mainColor.text }}\r\n                key={page}\r\n              >\r\n                <ListItem\r\n                  disablePadding\r\n                  sx={{\r\n                    backgroundColor:\r\n                      location.pathname === pagesHref[index] ? theme.palette.mainColor.background : \"\",\r\n                  }}\r\n                >\r\n                  <ListItemButton>\r\n                    <ListItemIcon>{arrayIcons[index]}</ListItemIcon>\r\n                    <ListItemText primary={page}  />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          \r\n\r\n           {/* {conditionsPage\r\n            ? logInPages.map((page, index) => (\r\n                <Link\r\n                  to={logInPagesHref[index]}\r\n                  style={{ textDecoration: \"none\" }}\r\n                  key={page}\r\n                >\r\n                  <ListItem\r\n                    disablePadding\r\n                    sx={{\r\n                      backgroundColor:\r\n                        location.pathname === logInPagesHref[index]\r\n                          ? \"#f8f8f8\"\r\n                          : \"\",\r\n                    }}\r\n                  >\r\n                    <ListItemButton>\r\n                      <ListItemIcon>{arrayIconsLogin[index]}</ListItemIcon>\r\n                      <ListItemText primary={page} />\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                </Link>\r\n              ))\r\n            : pages.map((page, index) => (\r\n                <Link\r\n                  to={pagesHref[index]}\r\n                  style={{ textDecoration: \"none\" }}\r\n                  key={page}\r\n                >\r\n                  <ListItem\r\n                    disablePadding\r\n                    sx={{\r\n                      backgroundColor:\r\n                        location.pathname === pagesHref[index] ? \"#f8f8f8\" : \"\",\r\n                    }}\r\n                  >\r\n                    <ListItemButton>\r\n                      <ListItemIcon>{arrayIcons[index]}</ListItemIcon>\r\n                      <ListItemText primary={page} />\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                </Link>\r\n              ))}\r\n          {conditionsPage ? (\r\n            <>\r\n              <IconButton\r\n                onClick={() => {\r\n                  dispatch(conditions(false));\r\n                  console.log(\"condition set to false\");\r\n                  localStorage.removeItem(\"user-info\");\r\n                  localStorage.removeItem(\"condition\");\r\n                }}\r\n              >\r\n                <LogoutIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}  */}\r\n        </List>\r\n      </Drawer>\r\n    )\r\n    \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}