{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const sigupFetch = createAsyncThunk(\"signUpSlice/sigupFetch\", async (username, email, password) => {\n  const res = await fetch(`https://api.realworld.io/api/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user: {\n        username: \"Jacob\",\n        email: \"jake@jake.jake\",\n        password: \"jakejake\"\n      }\n    })\n  });\n  const data = await res.json();\n  return data;\n});\nconst signUpSlice = createSlice({\n  initialState: [],\n  name: \"signUpSlice\",\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(sigupFetch.fulfilled, (state, action) => {\n      state = action.payload;\n    });\n  }\n});\nexport const {} = signUpSlice.actions;\nexport default signUpSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","sigupFetch","username","email","password","res","fetch","method","headers","body","JSON","stringify","user","data","json","signUpSlice","initialState","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","actions","reducer"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/ReduxPages/ReduxSlices/signup-slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const sigupFetch = createAsyncThunk(\r\n  \"signUpSlice/sigupFetch\",\r\n  async (username, email, password) => {\r\n    const res = await fetch(`https://api.realworld.io/api/users`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: {\r\n          username: \"Jacob\",\r\n          email: \"jake@jake.jake\",\r\n          password: \"jakejake\",\r\n        },\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nconst signUpSlice = createSlice({\r\n  initialState: [],\r\n  name: \"signUpSlice\",\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(sigupFetch.fulfilled, (state, action) => {\r\n      state = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const {} = signUpSlice.actions;\r\nexport default signUpSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CACxC,wBAAwB,EACxB,OAAOE,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACnC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,oCAAmC,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,IAAI,EAAE;QACJV,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE,gBAAgB;QACvBC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC,CAAC;EACF,MAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI;AACb,CACF,CAAC;AAED,MAAME,WAAW,GAAGhB,WAAW,CAAC;EAC9BiB,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACpB,UAAU,CAACqB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,GAAGC,MAAM,CAACC,OAAO;IACxB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM,CAAC,CAAC,GAAGV,WAAW,CAACW,OAAO;AACrC,eAAeX,WAAW,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}