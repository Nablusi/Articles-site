{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const tagFetch = createAsyncThunk(\"tagSlice/tagFetch\", async () => {\n  const res = await fetch(`https://api.realworld.io/api/tags`);\n  const data = await res.json();\n  return data.tags;\n});\nconst tagSlice = createSlice({\n  name: \"tagSlice\",\n  initialState: {},\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(tagFetch.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport default tagSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","tagFetch","res","fetch","data","json","tags","tagSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/ReduxPages/ReduxSlices/tags-slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const tagFetch = createAsyncThunk(\r\n  \"tagSlice/tagFetch\",\r\n  async () => {\r\n    const res = await fetch(`https://api.realworld.io/api/tags`); \r\n    const data = await res.json(); \r\n    return data.tags; \r\n  });\r\n\r\n\r\nconst tagSlice = createSlice({\r\n  name: \"tagSlice\",\r\n  initialState: {},\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(tagFetch.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default tagSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CACtC,mBAAmB,EACnB,YAAY;EACV,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,mCAAkC,CAAC;EAC5D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI,CAACE,IAAI;AAClB,CAAC,CAAC;AAGJ,MAAMC,QAAQ,GAAGR,WAAW,CAAC;EAC3BS,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACZ,QAAQ,CAACa,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrD,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeV,QAAQ,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}