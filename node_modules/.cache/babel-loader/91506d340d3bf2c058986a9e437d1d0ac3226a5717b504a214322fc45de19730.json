{"ast":null,"code":"import React from \"react\";\nimport { Drawer, ListItem, ListItemButton, ListItemIcon, ListItemText, List, Divider, IconButton, useTheme } from \"@mui/material\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport HowToRegIcon from \"@mui/icons-material/HowToReg\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport { conditions } from \"./ReduxServices/Slices/conditions-slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SideBar() {\n  // const pages = [\"Home\", \"Sign In\", \"sign Up\"];\n  // const logInPages = [\"Home\", \"New Post\", \"Settings\"];\n  // const pagesHref = [\"/\", \"/signin\", \"/signup\"];\n  // const conditionsPage = useSelector((state) => state.condition);\n  // const arrayIcons = [<HomeIcon />, <LoginIcon />, <HowToRegIcon />];\n  // const arrayIconsLogin = [<HomeIcon />, <ArticleIcon />, <SettingsIcon />];\n  // const location = useLocation();\n  // const theme = useTheme();\n  // const dispatch = useDispatch();\n  // const user = JSON.parse(localStorage.getItem(\"user-info\"));\n  // const logInPagesHref = [\"/\", \"/newPost\", `/settings`];\n\n  // useEffect(() => {\n  //   const user = JSON.parse(localStorage.getItem(\"user-info\"));\n  //   if (user) {\n  //     dispatch(conditions(true));\n  //   }\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  //     <Drawer\n  //     variant=\"temporary\"\n  //     open={props.open}\n  //     onClose={props.openToggle}\n  //     sx={{ width: \"240px\", display: { xs: \"flex\", md: \"none\" } }}\n  //   >\n  //     <List sx={{ width: \"240px\", flexDirection: \"column\" }}>\n  //       <IconButton\n  //         onClick={() => {\n  //           localStorage.setItem(\n  //             \"currentMode\",\n  //             theme.palette.mode === \"light\" ? \"dark\" : \"light\"\n  //           );\n  //           props.darkMode();\n  //         }}\n  //       >\n  //         {props.mode === \"light\" ? (\n  //           <Brightness4Icon />\n  //         ) : (\n  //           <Brightness7Icon sx={{ color: \"orange\" }} />\n  //         )}\n  //       </IconButton>\n  //       <Divider />\n  //       {conditionsPage\n  //         ? logInPages.map((page, index) => (\n  //             <Link\n  //               to={logInPagesHref[index]}\n  //               style={{ textDecoration: \"none\" }}\n  //               key={page}\n  //             >\n  //               <ListItem\n  //                 disablePadding\n  //                 sx={{\n  //                   backgroundColor:\n  //                     location.pathname === logInPagesHref[index]\n  //                       ? \"#f8f8f8\"\n  //                       : \"\",\n  //                 }}\n  //               >\n  //                 <ListItemButton>\n  //                   <ListItemIcon>{arrayIconsLogin[index]}</ListItemIcon>\n  //                   <ListItemText primary={page} />\n  //                 </ListItemButton>\n  //               </ListItem>\n  //             </Link>\n  //           ))\n  //         : pages.map((page, index) => (\n  //             <Link\n  //               to={pagesHref[index]}\n  //               style={{ textDecoration: \"none\" }}\n  //               key={page}\n  //             >\n  //               <ListItem\n  //                 disablePadding\n  //                 sx={{\n  //                   backgroundColor:\n  //                     location.pathname === pagesHref[index] ? \"#f8f8f8\" : \"\",\n  //                 }}\n  //               >\n  //                 <ListItemButton>\n  //                   <ListItemIcon>{arrayIcons[index]}</ListItemIcon>\n  //                   <ListItemText primary={page} />\n  //                 </ListItemButton>\n  //               </ListItem>\n  //             </Link>\n  //           ))}\n  //       {conditionsPage ? (\n  //         <>\n  //           <IconButton\n  //             onClick={() => {\n  //               dispatch(conditions(false));\n  //               console.log(\"condition set to false\");\n  //               localStorage.removeItem(\"user-info\");\n  //               localStorage.removeItem(\"condition\");\n  //             }}\n  //           >\n  //             <LogoutIcon />\n  //           </IconButton>\n  //         </>\n  //       ) : (\n  //         \"\"\n  //       )}\n  //     </List>\n  //   </Drawer>\n  ;\n}\n_c = SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","Drawer","ListItem","ListItemButton","ListItemIcon","ListItemText","List","Divider","IconButton","useTheme","Link","useLocation","HomeIcon","HowToRegIcon","LoginIcon","Brightness7Icon","Brightness4Icon","conditions","useSelector","useDispatch","SettingsIcon","ArticleIcon","LogoutIcon","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","SideBar","_c","$RefreshReg$"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/components/Header/SideBar.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    Drawer,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Divider,\r\n    IconButton,\r\n    useTheme,\r\n  } from \"@mui/material\";\r\n  import { Link, useLocation } from \"react-router-dom\";\r\n  import HomeIcon from \"@mui/icons-material/Home\";\r\n  import HowToRegIcon from \"@mui/icons-material/HowToReg\";\r\n  import LoginIcon from \"@mui/icons-material/Login\";\r\n  import Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\n  import Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\n  import { conditions } from \"./ReduxServices/Slices/conditions-slice\";\r\n  import { useSelector, useDispatch } from \"react-redux\";\r\n  import SettingsIcon from \"@mui/icons-material/Settings\";\r\n  import ArticleIcon from \"@mui/icons-material/Article\";\r\n  import LogoutIcon from \"@mui/icons-material/Logout\";\r\n  import {  useNavigate, } from \"react-router-dom\";\r\n\r\nexport default function SideBar(){\r\n    // const pages = [\"Home\", \"Sign In\", \"sign Up\"];\r\n    // const logInPages = [\"Home\", \"New Post\", \"Settings\"];\r\n    // const pagesHref = [\"/\", \"/signin\", \"/signup\"];\r\n    // const conditionsPage = useSelector((state) => state.condition);\r\n    // const arrayIcons = [<HomeIcon />, <LoginIcon />, <HowToRegIcon />];\r\n    // const arrayIconsLogin = [<HomeIcon />, <ArticleIcon />, <SettingsIcon />];\r\n    // const location = useLocation();\r\n    // const theme = useTheme();\r\n    // const dispatch = useDispatch();\r\n    // const user = JSON.parse(localStorage.getItem(\"user-info\"));\r\n    // const logInPagesHref = [\"/\", \"/newPost\", `/settings`];\r\n  \r\n    // useEffect(() => {\r\n    //   const user = JSON.parse(localStorage.getItem(\"user-info\"));\r\n    //   if (user) {\r\n    //     dispatch(conditions(true));\r\n    //   }\r\n    // }, []);\r\n    return(\r\n    <>\r\n    </>\r\n    //     <Drawer\r\n    //     variant=\"temporary\"\r\n    //     open={props.open}\r\n    //     onClose={props.openToggle}\r\n    //     sx={{ width: \"240px\", display: { xs: \"flex\", md: \"none\" } }}\r\n    //   >\r\n    //     <List sx={{ width: \"240px\", flexDirection: \"column\" }}>\r\n    //       <IconButton\r\n    //         onClick={() => {\r\n    //           localStorage.setItem(\r\n    //             \"currentMode\",\r\n    //             theme.palette.mode === \"light\" ? \"dark\" : \"light\"\r\n    //           );\r\n    //           props.darkMode();\r\n    //         }}\r\n    //       >\r\n    //         {props.mode === \"light\" ? (\r\n    //           <Brightness4Icon />\r\n    //         ) : (\r\n    //           <Brightness7Icon sx={{ color: \"orange\" }} />\r\n    //         )}\r\n    //       </IconButton>\r\n    //       <Divider />\r\n    //       {conditionsPage\r\n    //         ? logInPages.map((page, index) => (\r\n    //             <Link\r\n    //               to={logInPagesHref[index]}\r\n    //               style={{ textDecoration: \"none\" }}\r\n    //               key={page}\r\n    //             >\r\n    //               <ListItem\r\n    //                 disablePadding\r\n    //                 sx={{\r\n    //                   backgroundColor:\r\n    //                     location.pathname === logInPagesHref[index]\r\n    //                       ? \"#f8f8f8\"\r\n    //                       : \"\",\r\n    //                 }}\r\n    //               >\r\n    //                 <ListItemButton>\r\n    //                   <ListItemIcon>{arrayIconsLogin[index]}</ListItemIcon>\r\n    //                   <ListItemText primary={page} />\r\n    //                 </ListItemButton>\r\n    //               </ListItem>\r\n    //             </Link>\r\n    //           ))\r\n    //         : pages.map((page, index) => (\r\n    //             <Link\r\n    //               to={pagesHref[index]}\r\n    //               style={{ textDecoration: \"none\" }}\r\n    //               key={page}\r\n    //             >\r\n    //               <ListItem\r\n    //                 disablePadding\r\n    //                 sx={{\r\n    //                   backgroundColor:\r\n    //                     location.pathname === pagesHref[index] ? \"#f8f8f8\" : \"\",\r\n    //                 }}\r\n    //               >\r\n    //                 <ListItemButton>\r\n    //                   <ListItemIcon>{arrayIcons[index]}</ListItemIcon>\r\n    //                   <ListItemText primary={page} />\r\n    //                 </ListItemButton>\r\n    //               </ListItem>\r\n    //             </Link>\r\n    //           ))}\r\n    //       {conditionsPage ? (\r\n    //         <>\r\n    //           <IconButton\r\n    //             onClick={() => {\r\n    //               dispatch(conditions(false));\r\n    //               console.log(\"condition set to false\");\r\n    //               localStorage.removeItem(\"user-info\");\r\n    //               localStorage.removeItem(\"condition\");\r\n    //             }}\r\n    //           >\r\n    //             <LogoutIcon />\r\n    //           </IconButton>\r\n    //         </>\r\n    //       ) : (\r\n    //         \"\"\r\n    //       )}\r\n    //     </List>\r\n    //   </Drawer>\r\n    )\r\n    \r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdC,YAAY,EACZC,YAAY,EACZC,IAAI,EACJC,OAAO,EACPC,UAAU,EACVC,QAAQ,QACH,eAAe;AACtB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,UAAU,QAAQ,yCAAyC;AACpE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAAUC,WAAW,QAAS,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,OAAOA,CAAA,EAAE;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,oBACAD,OAAA,CAAAF,SAAA,mBACE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAGJ;AAACI,EAAA,GA5GuBD,OAAO;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}