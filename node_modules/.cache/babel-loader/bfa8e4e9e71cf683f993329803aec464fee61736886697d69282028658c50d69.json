{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects-coding\\\\projects\\\\react-js\\\\learn-react\\\\ramizaid\\\\src\\\\RootLayout.js\";\nimport React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RootLayout() {\n  const getDesignTokens = mode => ({\n    palette: {\n      mode,\n      ...(mode === 'light' ? {\n        // palette values for light mode\n        primary: amber,\n        divider: amber[200],\n        mainColor: {\n          primary: grey[900],\n          secondary: grey[800]\n        }\n      } : {\n        // palette values for dark mode\n        primary: deepOrange,\n        divider: deepOrange[700],\n        background: {\n          default: deepOrange[900],\n          paper: deepOrange[900]\n        },\n        text: {\n          primary: '#fff',\n          secondary: grey[500]\n        }\n      })\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = RootLayout;\nvar _c;\n$RefreshReg$(_c, \"RootLayout\");","map":{"version":3,"names":["React","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","RootLayout","getDesignTokens","mode","palette","primary","amber","divider","mainColor","grey","secondary","deepOrange","background","default","paper","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/RootLayout.js"],"sourcesContent":["import React from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nexport default function RootLayout() {\r\n  const getDesignTokens = (mode) => ({\r\n    palette: {\r\n      mode,\r\n      ...(mode === 'light'\r\n        ? {\r\n            // palette values for light mode\r\n            primary: amber,\r\n            divider: amber[200],\r\n            mainColor: {\r\n              primary: grey[900],\r\n              secondary: grey[800],\r\n            },\r\n          }\r\n        : {\r\n            // palette values for dark mode\r\n            primary: deepOrange,\r\n            divider: deepOrange[700],\r\n            background: {\r\n              default: deepOrange[900],\r\n              paper: deepOrange[900],\r\n            },\r\n            text: {\r\n              primary: '#fff',\r\n              secondary: grey[500],\r\n            },\r\n          }),\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Header />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,MAAMC,eAAe,GAAIC,IAAI,KAAM;IACjCC,OAAO,EAAE;MACPD,IAAI;MACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;QACE;QACAE,OAAO,EAAEC,KAAK;QACdC,OAAO,EAAED,KAAK,CAAC,GAAG,CAAC;QACnBE,SAAS,EAAE;UACTH,OAAO,EAAEI,IAAI,CAAC,GAAG,CAAC;UAClBC,SAAS,EAAED,IAAI,CAAC,GAAG;QACrB;MACF,CAAC,GACD;QACE;QACAJ,OAAO,EAAEM,UAAU;QACnBJ,OAAO,EAAEI,UAAU,CAAC,GAAG,CAAC;QACxBC,UAAU,EAAE;UACVC,OAAO,EAAEF,UAAU,CAAC,GAAG,CAAC;UACxBG,KAAK,EAAEH,UAAU,CAAC,GAAG;QACvB,CAAC;QACDI,IAAI,EAAE;UACJV,OAAO,EAAE,MAAM;UACfK,SAAS,EAAED,IAAI,CAAC,GAAG;QACrB;MACF,CAAC;IACP;EACF,CAAC,CAAC;EAEF,oBACEX,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACF,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACV,CAAC;AAEP;AAACC,EAAA,GAnCuBpB,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}