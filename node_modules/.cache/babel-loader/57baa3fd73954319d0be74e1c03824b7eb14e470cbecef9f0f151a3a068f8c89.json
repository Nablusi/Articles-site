{"ast":null,"code":"/**\n * type-name - Just a reasonable typeof\n *\n * https://github.com/twada/type-name\n *\n * Copyright (c) 2014-2016 Takuto Wada\n * Licensed under the MIT license.\n *   https://github.com/twada/type-name/blob/master/LICENSE\n */\n'use strict';\n\nvar toStr = Object.prototype.toString;\nfunction funcName(f) {\n  if (f.name) {\n    return f.name;\n  }\n  var match = /^\\s*function\\s*([^\\(]*)/im.exec(f.toString());\n  return match ? match[1] : '';\n}\nfunction ctorName(obj) {\n  var strName = toStr.call(obj).slice(8, -1);\n  if ((strName === 'Object' || strName === 'Error') && obj.constructor) {\n    return funcName(obj.constructor);\n  }\n  return strName;\n}\nfunction typeName(val) {\n  var type;\n  if (val === null) {\n    return 'null';\n  }\n  type = typeof val;\n  if (type === 'object') {\n    return ctorName(val);\n  }\n  return type;\n}\nmodule.exports = typeName;","map":{"version":3,"names":["toStr","Object","prototype","toString","funcName","f","name","match","exec","ctorName","obj","strName","call","slice","constructor","typeName","val","type","module","exports"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/node_modules/type-name/index.js"],"sourcesContent":["/**\n * type-name - Just a reasonable typeof\n *\n * https://github.com/twada/type-name\n *\n * Copyright (c) 2014-2016 Takuto Wada\n * Licensed under the MIT license.\n *   https://github.com/twada/type-name/blob/master/LICENSE\n */\n'use strict';\n\nvar toStr = Object.prototype.toString;\n\nfunction funcName (f) {\n    if (f.name) {\n        return f.name;\n    }\n    var match = /^\\s*function\\s*([^\\(]*)/im.exec(f.toString());\n    return match ? match[1] : '';\n}\n\nfunction ctorName (obj) {\n    var strName = toStr.call(obj).slice(8, -1);\n    if ((strName === 'Object' || strName === 'Error') && obj.constructor) {\n        return funcName(obj.constructor);\n    }\n    return strName;\n}\n\nfunction typeName (val) {\n    var type;\n    if (val === null) {\n        return 'null';\n    }\n    type = typeof val;\n    if (type === 'object') {\n        return ctorName(val);\n    }\n    return type;\n}\n\nmodule.exports = typeName;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ;AAErC,SAASC,QAAQA,CAAEC,CAAC,EAAE;EAClB,IAAIA,CAAC,CAACC,IAAI,EAAE;IACR,OAAOD,CAAC,CAACC,IAAI;EACjB;EACA,IAAIC,KAAK,GAAG,2BAA2B,CAACC,IAAI,CAACH,CAAC,CAACF,QAAQ,CAAC,CAAC,CAAC;EAC1D,OAAOI,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;AAChC;AAEA,SAASE,QAAQA,CAAEC,GAAG,EAAE;EACpB,IAAIC,OAAO,GAAGX,KAAK,CAACY,IAAI,CAACF,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,IAAI,CAACF,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,OAAO,KAAKD,GAAG,CAACI,WAAW,EAAE;IAClE,OAAOV,QAAQ,CAACM,GAAG,CAACI,WAAW,CAAC;EACpC;EACA,OAAOH,OAAO;AAClB;AAEA,SAASI,QAAQA,CAAEC,GAAG,EAAE;EACpB,IAAIC,IAAI;EACR,IAAID,GAAG,KAAK,IAAI,EAAE;IACd,OAAO,MAAM;EACjB;EACAC,IAAI,GAAG,OAAOD,GAAG;EACjB,IAAIC,IAAI,KAAK,QAAQ,EAAE;IACnB,OAAOR,QAAQ,CAACO,GAAG,CAAC;EACxB;EACA,OAAOC,IAAI;AACf;AAEAC,MAAM,CAACC,OAAO,GAAGJ,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}