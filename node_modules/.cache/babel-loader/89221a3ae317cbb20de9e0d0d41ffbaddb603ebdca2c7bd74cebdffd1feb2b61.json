{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const postFetch = createAsyncThunk('postSlice/postFetch', async (title, description, body, tagList) => {\n  const res = await fetch('https://api.realworld.io/api/articles', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      article: {\n        title,\n        description,\n        body,\n        tagList\n      }\n    })\n  });\n});\nconst postSlice = createSlice({\n  initialState: [],\n  name: 'postSlice',\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(postFetch.fulfilled, (state, action) => {\n      state = action.payload;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","postFetch","title","description","body","tagList","res","fetch","method","headers","JSON","stringify","article","postSlice","initialState","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["C:/projects-coding/projects/react-js/learn-react/ramizaid/src/ReduxPages/ReduxSlices/postArticle-slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const postFetch = createAsyncThunk('postSlice/postFetch', \r\nasync(title, description, body, tagList)=>{\r\n    const res = await fetch('https://api.realworld.io/api/articles', \r\n    {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            article: {\r\n            title,\r\n            description,\r\n            body,\r\n            tagList, \r\n          },\r\n        }),\r\n      })\r\n}\r\n)\r\n\r\nconst postSlice = createSlice({\r\n    initialState:[], \r\n    name:'postSlice', \r\n    reducers:{}, \r\n    extraReducers:(builder)=>{\r\n        builder.addCase(postFetch.fulfilled, (state, action)=>{\r\n            state = action.payload; \r\n        })\r\n    }\r\n})\r\n\r\nexport default postSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CAAC,qBAAqB,EAC/D,OAAME,KAAK,EAAEC,WAAW,EAAEC,IAAI,EAAEC,OAAO,KAAG;EACtC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAC/D;IACIC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MACjBC,OAAO,EAAE;QACTV,KAAK;QACLC,WAAW;QACXC,IAAI;QACJC;MACF;IACF,CAAC;EACH,CAAC,CAAC;AACR,CACA,CAAC;AAED,MAAMQ,SAAS,GAAGd,WAAW,CAAC;EAC1Be,YAAY,EAAC,EAAE;EACfC,IAAI,EAAC,WAAW;EAChBC,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAEC,OAAO,IAAG;IACrBA,OAAO,CAACC,OAAO,CAAClB,SAAS,CAACmB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MAClDD,KAAK,GAAGC,MAAM,CAACC,OAAO;IAC1B,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeV,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}